
# Desc: Player sample configuration file for controlling Stage devices
# Author:  Richard Vaughan
# Date: 1 December 2004
# CVS: $Id: simple.cfg,v 1.34 2007/11/02 01:11:39 gerkey Exp $


# load the Stage plugin simulation driver
driver
(		
  name "stage"
  provides ["simulation:0" ]
  plugin "libstageplugin"

  # load the named file into the simulator
  worldfile "simple.world"	
)

# Export the map
driver
(		
  name "stage"
  provides ["map:0" ]
  model "cave"
)

# Create a Stage driver and attach position2d and laser interfaces 
# to the model "robot1"
driver
( 
  name "stage"
  provides ["6665:position2d:0" "6665:laser:0" "6665:sonar:0" ]
  model "robot1" 
)

# 2nd robot
driver
( 
  name "stage"
  provides ["6666:position2d:0" "6666:laser:0" "6666:sonar:0" ]
  model "robot2" 
)

# Demonstrates use of a Player "abstract driver": one that doesn't
# interface directly with hardware, but only with other Player devices.
# The VFH driver attempts to drive to commanded positions without 
# bumping into obstacles.
#driver 
#(
  #name "vfh"
  #provides ["position2d:1"]
  #requires ["position2d:0" "laser:0" ]
#)

# Play back odometry and laser data at twice real-time from "mydata.log"
#driver
#(
  #name "readlog"
  #filename "pioneer.log"
  #provides ["position2d:0" "laser:0" "sonar:0" "log:0"]
  #speed 2.0
#)

# Log data from sonar:0 laser:0 position2d:0 to
# "~/projekt090406/logs/mydata_YYYY_MM_DD_HH_MM_SS.log"
driver
(
  name "writelog"
  log_directory "./log/"
  #basename "mydata"
  #requires ["sonar:0" "laser:0" "position2d:0"]
  requires ["position2d:0"]
  provides ["log:0"]
  alwayson 1
  autorecord 1
)
