# Desc: Player config file for localization and navigation
# Date: 2009-11-16
# CVS: $Id: amcl-sonar.cfg,v 1.2 2005-08-05 23:18:41 gerkey Exp $

# Load the map for localization and planning from the same image file,
# and specify the correct resolution (a 500x500 pixel map at 16m x 16m
# is 0.032 m / pixel resolution).
driver
(
  name "mapfile"
  provides ["map:0"]
  #filename "bitmaps/tams_compl.png"
  filename "bitmaps/tams_compl_fine2.pgm"
  #resolution 0.015 # meters per pixel
  #resolution 0.021 # meters per pixel
  resolution 0.08 # meters per pixel
  #origin [-8 -8 ] # real-world location of the bottom-left-hand corner of the map
)

driver
(
  name "vfh"
  provides ["position2d:1"]
  requires ["6666:position2d:0" "6666:laser:0"]
  safety_dist_0ms 0.1 #The minimum distance the robot is allowed to get to obstacles when stopped.
  safety_dist_1ms 0.1 #The minimum distance the robot is allowed to get to obstacles when travelling at 1 m/s.
  #free_space_cutoff 2000000.0 #Unitless value. The higher the value, the closer the robot will get to obstacles before avoiding (while stopped).
  max_speed 0.3 # The maximum allowable speed of the robot.
  max_speed_narrow_opening 0.2 #The maximum allowable speed of the robot through a narrow opening
  #max_turnrate_0ms 40 #The maximum allowable turnrate of the robot when stopped.
  #max_turnrate_1ms 40 #The maximum allowable turnrate of the robot when travelling 1 m/s.
  distance_epsilon 0.2 #Planar distance from the target position that will be considered acceptable. Set this to be GREATER than the corresponding threshold of the underlying position device!
  angle_epsilon 45 #Angular difference from target angle that will considered acceptable. Set this to be GREATER than the corresponding threshold of the underlying position device!
)

driver
(
 name "amcl"
 provides ["localize:0" "position2d:2"]
 requires ["odometry::6666:position2d:0" "6666:laser:0" "laser:::map:0"]
 enable_gui 1 # Set this to 1 to enable the built-in driver GUI
)

driver
(
  name "wavefront"
  provides ["planner:0"]
  requires ["output:::position2d:1" "input:::position2d:2" "map:0"]
  alwayson 1
  safety_dist 0.6 #Don't plan a path any closer than this distance to any obstacle. Set this to be GREATER than the corresponding threshold of the underlying position device!
  distance_epsilon 0.1 #Planar distance from the target position that will be considered acceptable. Set this to be GREATER than the corresponding threshold of the underlying position device!
  angle_epsilon 30 #Angular difference from target angle that will considered acceptable. Set this to be GREATER than the corresponding threshold of the underlying position device!
)
